require('dotenv').config(); // üîê –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

const express = require('express');
const axios = require('axios');
const path = require('path');
const fs = require('fs');
const app = express();
const PORT = 3000;

// ‚ú® –•—Ä–∞–Ω–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ VK-–∫–æ–¥—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º
const usedCodes = new Map();
const recentIPs = new Map(); // üîÆ –•—Ä–∞–Ω–∏–º IP –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
let callCounter = 0; // üîÆ –°—á—ë—Ç—á–∏–∫ –≤—ã–∑–æ–≤–æ–≤ callback

// ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
app.get('/test', (req, res) => {
  res.send('Test OK!');
});

// ===========================
// üîó –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ VK
// ===========================
app.get('/auth/vk', (req, res) => {
  const CLIENT_ID = process.env.VK_CLIENT_ID;
  const REDIRECT_URI = process.env.VK_REDIRECT_URI;

  const params = new URLSearchParams({
    client_id: CLIENT_ID,
    redirect_uri: REDIRECT_URI,
    response_type: 'code',
    scope: 'offline,wall,groups,photos,email,friends,docs,video,status',
    v: '5.131'
  });

  console.log(`[VK LINK] –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –≤ ${new Date().toISOString()}`); // ü™Ñ –õ–æ–≥ –≤—Ä–µ–º–µ–Ω–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏
  res.redirect(`https://oauth.vk.com/authorize?${params.toString()}`);
});

// ===========================
// üåê –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
// ===========================
app.get('/', (req, res) => {
  res.send('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç –§–æ–∫—É—Å–Ω–∏–∫–∞ –ê–ª—å—Ç–∞–∏—Ä–∞! ‚ú®');
});

// ===========================
// üéØ –û—Å–Ω–æ–≤–Ω–æ–π VK CALLBACK
// ===========================
app.get('/auth/vk/callback', async (req, res) => {
  callCounter++;
  const now = Date.now();
  const ip = req.ip;

  console.log(`=== [VK CALLBACK] –í–´–ó–û–í #${callCounter} === üåü`);
  console.log(`[CALLBACK] –í—Ä–µ–º—è: ${new Date().toISOString()}`);
  console.log(`[CALLBACK] code: ${req.query.code}`);
  console.log(`[CALLBACK] state: ${req.query.state}`);
  console.log(`[CALLBACK] IP: ${ip}`);
  console.log(`[CALLBACK] User-Agent: ${req.headers['user-agent']}`);
  console.log(`[CALLBACK] Referer: ${req.headers['referer']}`);

  // üîÆ –ó–∞—â–∏—Ç–∞ –æ—Ç —á–∞—Å—Ç—ã—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤ –ø–æ IP
  if (recentIPs.has(ip) && now - recentIPs.get(ip) < 5000) {
    console.warn(`üîÅ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å IP ${ip} ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
    return res.status(429).send('–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã');
  }
  recentIPs.set(ip, now);
  setTimeout(() => recentIPs.delete(ip), 60000); // üßô‚Äç‚ôÇÔ∏è –û—á–∏—Å—Ç–∫–∞ IP —á–µ—Ä–µ–∑ 1 –º–∏–Ω

  try {
    const { code, state } = req.query;

    if (!code) {
      return res.status(400).send('–û—à–∏–±–∫–∞: –Ω–µ—Ç –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!');
    }

    // ‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω?
    if (usedCodes.has(code)) {
      console.warn('‚ÄºÔ∏è –ö–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!');
      return res.sendFile(path.join(__dirname, 'public', 'error.html'));
    }

    usedCodes.set(code, now); // üß∑ –û—Ç–º–µ—á–∞–µ–º –∫–æ–¥

    // üì• –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º access_token
    const tokenParams = new URLSearchParams({
      client_id: process.env.VK_CLIENT_ID,
      client_secret: process.env.VK_CLIENT_SECRET,
      redirect_uri: process.env.VK_REDIRECT_URI,
      code,
    });

    const vkRes = await axios.get(`https://oauth.vk.com/access_token?${tokenParams.toString()}`);
    console.log('üóùÔ∏è VK access_token response:', vkRes.data);

    // üìå –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª
    const { user_id, access_token, email } = vkRes.data;
    const tg_id = state || 'unknown';

    const usersPath = path.join(__dirname, 'users.json');
    let users = {};

    if (fs.existsSync(usersPath)) {
      const raw = fs.readFileSync(usersPath, 'utf-8');
      users = raw ? JSON.parse(raw) : {};
    }

    users[user_id] = {
      vk_user_id: user_id,
      access_token,
      email,
      tg_id
    };

    fs.writeFileSync(usersPath, JSON.stringify(users, null, 2));
    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å VK ${user_id} (TG ${tg_id})`);

    // üü¢ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—Ö–∞
    return res.sendFile(path.join(__dirname, 'public', 'success.html'));

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –∫–æ–¥–∞:', error.response?.data || error.message);
    return res.sendFile(path.join(__dirname, 'public', 'error.html'));
  }
});

// ===========================
// üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∫–æ–¥–æ–≤
// ===========================
setInterval(() => {
  const now = Date.now();
  const TTL = 2 * 60 * 1000;

  for (const [code, timestamp] of usedCodes.entries()) {
    if (now - timestamp > TTL) {
      usedCodes.delete(code);
      console.log(`üßº –£–¥–∞–ª—ë–Ω –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π code: ${code}`);
    }
  }
}, 60000);

// ===========================
// üÜò –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–º–æ—â–∏
// ===========================
app.get('/help', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'help.html'));
});

// ===========================
// üìÇ –°—Ç–∞—Ç–∏–∫–∞ –±–µ–∑ /auth
// ===========================
app.use((req, res, next) => {
  console.log('[STATIC MIDDLEWARE] –ó–∞–ø—Ä–æ—Å:', req.url);
  next();
});

app.use((req, res, next) => {
  if (req.url.startsWith('/auth')) return next();
  express.static('frontend')(req, res, next);
});
app.use((req, res, next) => {
  if (req.url.startsWith('/auth')) return next();
  express.static(path.join(__dirname, 'public'))(req, res, next);
});

// ===========================
// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
// ===========================
app.listen(PORT, '0.0.0.0', () => {
  console.log(`üîÆ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
