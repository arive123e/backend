// index.js ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π backend VK ID OAuth 2.1 (–∏—é–Ω—å 2025)
const express = require('express');
const fs = require('fs');
const path = require('path');
const axios = require('axios');

const app = express();
const PORT = 3000;

// –î–ª—è —á—Ç–µ–Ω–∏—è JSON POST-–∑–∞–ø—Ä–æ—Å–æ–≤
app.use(express.json());

// –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
app.get('/test', (req, res) => {
  res.send('Test OK! üö¶');
});

// –ì–ª–∞–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω VK ID
app.post('/auth/vk/token', async (req, res) => {
  const { code, code_verifier, device_id, tg_id } = req.body;

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  if (!code || !code_verifier || !device_id) {
    return res.status(400).json({ error: '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: code, code_verifier, device_id.' });
  }

  // –î–∞–Ω–Ω—ã–µ —Ç–≤–æ–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è VK
  const client_id = '53336238';
  const redirect_uri = 'https://api.fokusnikaltair.xyz/auth/vk/callback';

  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è VK OAuth 2.1
  const params = {
    grant_type: 'authorization_code',
    client_id,
    redirect_uri,
    code,
    code_verifier,
    device_id,
    v: '5.199'
  };

  try {
    // –ó–∞–ø—Ä–æ—Å –∫ VK –¥–ª—è –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω—ã
    const vkRes = await axios.post(
      'https://id.vk.com/oauth2/token',
      new URLSearchParams(params),
      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }
    );
    const data = vkRes.data;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: user_id, —Ç–æ–∫–µ–Ω—ã, tg_id (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const usersPath = path.join(__dirname, 'users.json');
    let users = {};
    if (fs.existsSync(usersPath)) {
      const raw = fs.readFileSync(usersPath, 'utf-8');
      users = raw ? JSON.parse(raw) : {};
    }
    users[data.user_id] = {
      vk_user_id: data.user_id,
      access_token: data.access_token,
      refresh_token: data.refresh_token,
      expires_in: data.expires_in,
      tg_id: tg_id || null,
      saved_at: new Date().toISOString()
    };
    fs.writeFileSync(usersPath, JSON.stringify(users, null, 2));

    res.json({ success: true, user_id: data.user_id, expires_in: data.expires_in });
    console.log(`üíæ VK user_id ${data.user_id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω (TG: ${tg_id || '-'})`);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω:', err.response?.data || err.message);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω VK. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.' });
  }
});

// === VK AUTH CALLBACK ===
app.get('/auth/vk/callback', async (req, res) => {
  const { code, state, code_verifier } = req.query;
  console.log('[VK CALLBACK] –ü–æ–ª—É—á–µ–Ω –∫–æ–¥:', code, 'state:', state);

  if (!code) {
    return res.send('<h2>–û—à–∏–±–∫–∞: –ø–∞—Ä–∞–º–µ—Ç—Ä code –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>');
  }

  // –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è VK ID
  const client_id = '–¢–í–û–ô_CLIENT_ID';
  const redirect_uri = 'https://api.fokusnikaltair.xyz/auth/vk/callback';

  // --- PKCE: code_verifier –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –±–µ–∑ –Ω–µ–≥–æ ---
  try {
    // –°–æ–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è VK API (PKCE –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    const params = new URLSearchParams({
      client_id,
      redirect_uri,
      code,
      // code_verifier: code_verifier || '', // —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –µ—Å–ª–∏ —Ç–æ—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å
    });

    // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å PKCE ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–π code_verifier:
    // params.append('code_verifier', code_verifier || '');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–º–µ–Ω code –Ω–∞ access_token:
    const vkRes = await axios.post(
      'https://api.vk.com/oauth/access_token',
      params, // –î–ª—è post x-www-form-urlencoded, –µ—Å–ª–∏ –±—É–¥–µ—Ç 400 ‚Äî –ø–æ–ø—Ä–æ–±—É–π –∫–∞–∫ query string
      {
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }
    );

    // vkRes.data = { access_token, expires_in, user_id, email, ... }
    console.log('[VK TOKEN]', vkRes.data);

    // –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–æ–∫–µ–Ω, tg_id = state, –∏ —Ç.–¥.

    res.send(`
      <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h2>
      <p>–ú–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram.<br>state (tg_id): <b>${state}</b></p>
      <pre>${JSON.stringify(vkRes.data, null, 2)}</pre>
    `);

  } catch (err) {
    console.error('[VK ERROR]', err?.response?.data || err);
    res.send(`<h2>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω VK</h2>
    <pre>${JSON.stringify(err?.response?.data || err, null, 2)}</pre>`);
  }
});

// –†–∞–∑–¥–∞—ë–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥/–ø—É–±–ª–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, 'frontend')));
app.use(express.static(path.join(__dirname, 'public')));

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
  console.log(`ü™Ñ –°–µ—Ä–≤–µ—Ä VK ID Auth –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
