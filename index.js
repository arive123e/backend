// index.js ‚Äî VK ID OAuth 2.1, LowCode-ready (–∏—é–Ω—å 2025)

const express = require('express');
const fs = require('fs');
const path = require('path');
const axios = require('axios');

const app = express();
const PORT = 3000;

app.use(express.json());

// –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
app.get('/test', (req, res) => {
  res.send('Test OK! üö¶');
});

// ‚ö° –ì–õ–ê–í–ù–´–ô –≠–ù–î–ü–û–ò–ù–¢: –æ–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω (–¥–ª—è LowCode VKID SDK)
app.get('/auth/vk/callback', async (req, res) => {
  const { code, state } = req.query; // –ù–∏–∫–∞–∫–∏—Ö code_verifier!

  if (!code) {
    return res.send('<h2>–û—à–∏–±–∫–∞: –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω code</h2>');
  }

  // VK APP
  const client_id = '53336238';
  const redirect_uri = 'https://api.fokusnikaltair.xyz/auth/vk/callback';

  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
  const postParams = new URLSearchParams();
  postParams.append('grant_type', 'authorization_code');
  postParams.append('client_id', client_id);
  postParams.append('redirect_uri', redirect_uri);
  postParams.append('code', code);
  postParams.append('v', '5.199');

  try {
    // –ó–∞–ø—Ä–æ—Å –∫ VK
    const vkRes = await axios.post(
      'https://id.vk.com/oauth2/token',
      postParams.toString(),
      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }
    );
    const data = vkRes.data;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (users.json)
    const usersPath = path.join(__dirname, 'users.json');
    let users = {};
    if (fs.existsSync(usersPath)) {
      const raw = fs.readFileSync(usersPath, 'utf-8');
      users = raw ? JSON.parse(raw) : {};
    }
    users[data.user_id] = {
      vk_user_id: data.user_id,
      access_token: data.access_token,
      refresh_token: data.refresh_token,
      expires_in: data.expires_in,
      tg_id: state || null,
      saved_at: new Date().toISOString()
    };
    fs.writeFileSync(usersPath, JSON.stringify(users, null, 2));

    res.send('<h2><b>–£—Å–ø–µ—à–Ω–æ!</b> –ú–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram.</h2>');
    console.log(`üíæ VK user_id ${data.user_id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω (TG: ${state || '-'})`);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω:', err.response?.data || err.message);
    res.send('<h2>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω VK<br>' + JSON.stringify(err.response?.data || err.message) + '</h2>');
  }
});

// ‚ö° –†–∞–∑–¥–∞—ë–º —Å—Ç–∞—Ç–∏–∫—É
app.use(express.static(path.join(__dirname, 'frontend')));
app.use(express.static(path.join(__dirname, 'public')));

app.listen(PORT, '0.0.0.0', () => {
  console.log(`ü™Ñ –°–µ—Ä–≤–µ—Ä VK ID Auth (LowCode-ready) –Ω–∞ http://localhost:${PORT}`);
});
