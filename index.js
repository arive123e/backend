// index.js ‚Äî backend VK ID OAuth 2.1 PKCE (–∏—é–Ω—å 2025)
const express = require('express');
const fs = require('fs');
const path = require('path');
const axios = require('axios');

const app = express();
const PORT = 3000;

// –î–ª—è —á—Ç–µ–Ω–∏—è JSON POST-–∑–∞–ø—Ä–æ—Å–æ–≤
app.use(express.json());

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
app.get('/test', (req, res) => {
  res.send('Test OK! üö¶');
});

// –ì–ª–∞–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω VK ID (–∏—Å–ø–æ–ª—å–∑—É–µ–º PKCE)
app.post('/auth/vk/token', async (req, res) => {
  const { code, code_verifier, device_id, tg_id } = req.body;

  // –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  console.log('[VK TOKEN] –ü–æ–ª—É—á–µ–Ω POST /auth/vk/token');
  console.log({ code, code_verifier, device_id, tg_id });

  if (!code || !code_verifier || !device_id) {
    console.log('‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤!');
    return res.status(400).json({ error: '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: code, code_verifier, device_id.' });
  }

  // –¢–í–û–ô client_id –∏ redirect_uri!
  const client_id = '53336238';
  const redirect_uri = 'https://api.fokusnikaltair.xyz/auth/vk/callback';

  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–æ–≥–æ –ø–æ VK ID PKCE (2025)
  const postParams = new URLSearchParams();
  postParams.append('grant_type', 'authorization_code');
  postParams.append('client_id', client_id);
  postParams.append('redirect_uri', redirect_uri);
  postParams.append('code', code);
  postParams.append('code_verifier', code_verifier);
  postParams.append('device_id', device_id);
  postParams.append('v', '5.199');

  console.log('[VK TOKEN] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ VK:', postParams.toString());

  try {
    const vkRes = await axios.post(
      'https://id.vk.com/oauth2/token',
      postParams.toString(),
      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }
    );
    const data = vkRes.data;

    console.log('[VK TOKEN] –û—Ç–≤–µ—Ç VK:', data);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const usersPath = path.join(__dirname, 'users.json');
    let users = {};
    if (fs.existsSync(usersPath)) {
      const raw = fs.readFileSync(usersPath, 'utf-8');
      users = raw ? JSON.parse(raw) : {};
    }
    users[data.user_id] = {
      vk_user_id: data.user_id,
      access_token: data.access_token,
      refresh_token: data.refresh_token,
      expires_in: data.expires_in,
      tg_id: tg_id || null,
      saved_at: new Date().toISOString()
    };
    fs.writeFileSync(usersPath, JSON.stringify(users, null, 2));

    res.json({ success: true, user_id: data.user_id, expires_in: data.expires_in });
    console.log(`üíæ VK user_id ${data.user_id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω (TG: ${tg_id || '-'})`);
  } catch (err) {
    // –ü–æ–¥—Ä–æ–±–Ω–æ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω:', err.response?.data || err.message);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω VK. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', vk: err.response?.data || err.message });
  }
});

// –ö–æ–ª–ª–±—ç–∫ ‚Äî —Ç–æ–ª—å–∫–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è VK ID
app.get('/auth/vk/callback', (req, res) => {
  res.send('<h2><b>–ó–∞–≤–µ—Ä—à–µ–Ω–æ!</b> –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram.</h2>');
});

// –†–∞–∑–¥–∞—ë–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥/–ø—É–±–ª–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, 'frontend')));
app.use(express.static(path.join(__dirname, 'public')));

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
  console.log(`ü™Ñ –°–µ—Ä–≤–µ—Ä VK ID Auth –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
